apiVersion: apps/v1
kind: Deployment
metadata:
  name: feed-feeder
  labels:
    app: feed-feeder
    role: feed-feeder
  namespace: {{ .Release.Namespace }}
spec:
  replicas: {{ .Values.feedFeeder.replicas }}
  selector:
    matchLabels:
      role: feed-feeder
  template:
    metadata:
      labels:
        app: feed-feeder
        role: feed-feeder
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/feed-feeder-configmap.yaml") . | sha256sum }}
        checksum/secret: {{ include (print $.Template.BasePath "/feed-feeder-secret.yaml") . | sha256sum }}
    spec:
      {{- if .Values.feedFeeder.nodeSelector }}
      nodeSelector:
      {{ toYaml .Values.feedFeeder.nodeSelector | indent 8 }}
      {{- end }}
      securityContext:
        runAsUser: 10009
      {{- if .Values.feedFeeder.imagePullSecrets }}
      imagePullSecrets:
      {{ toYaml .Values.feedFeeder.imagePullSecrets | indent 8 }}
      {{- end }}
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                topologyKey: "kubernetes.io/hostname"
                labelSelector:
                  matchExpressions:
                  - key: app
                    operator: In
                    values:
                    - feed-feeder
                  - key: role
                    operator: In
                    values:
                    - feed-feeder
      initContainers:
        - name: wait-for-pg
          image: busybox:1.31
          securityContext:
            allowPrivilegeEscalation: false
          command: ['sh', '-c', 'until nc -z {{ .Values.feedFeeder.database.host }} {{ .Values.feedFeeder.database.port }} > /dev/null 2>&1 ; do echo "Postgres is unavailable - sleeping"; sleep 1; done']
      containers:
        - name: feed-feeder
          image: "{{ .Values.feedFeeder.registry }}/{{ .Values.feedFeeder.image }}:{{ .Values.feedFeeder.tag }}"
          imagePullPolicy: {{ .Values.feedFeeder.imagePullPolicy }}
          securityContext:
            allowPrivilegeEscalation: false
          {{- with .Values.feedFeeder.resources }}
          resources:
            limits:
              cpu: {{ .limits.cpu }}
              memory: {{ .limits.memory }}
            requests:
              cpu: {{ .requests.cpu }}
              memory: {{ .requests.memory }}
          {{- end }}
          command: ["/usr/local/bundle/bin/puma", "--tag", "feed-feeder", "-e", "production", "-b", "tcp://0.0.0.0:9292"]
          readinessProbe:
            httpGet:
              path: /
              port: 9292
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 10
          ports:
            - containerPort: 9292
          envFrom:
            - configMapRef:
                name: feed-feeder
            - secretRef:
                name: feed-feeder
