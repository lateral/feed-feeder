# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will download a prebuilt Ruby version, install dependencies and run tests with Rake
# For more information see: https://github.com/marketplace/actions/setup-ruby-jruby-and-truffleruby

name: Ruby

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  rspec:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:alpine
        env:
          POSTGRES_USER: lateral
          POSTGRES_PASSWORD: lateral
          POSTGRES_DB: feed-feeder_development
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      redis:
        image: redis:alpine
        ports: ["6379:6379"]
        options: --entrypoint redis-server
    steps:
      - name: "Checkout repository"
        uses: actions/checkout@v1
      - name: "Install Ruby version specified in `.ruby-version`"
        uses: eregon/use-ruby-action@master
      - name: "Install required system packages"
        run: sudo apt-get update -y && sudo apt-get install openssh-client rsync libpq-dev cmake -y
      - name: "Setup caching for Ruby gems cache"
        uses: actions/cache@v1
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gem-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-gem-
      - name: "Bundle install"
        run: |
          gem install bundler && bundle update --bundler && bundle -v
          bundle config path vendor/bundle
          bundle install --jobs 4 --retry 3
      - name: "Rails test"
        env:
          RAILS_ENV: test
        run: |
          bundle exec rails db:setup --trace
          bundle exec rspec
